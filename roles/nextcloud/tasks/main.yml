---

- name: adding php repository
  shell: 'echo deb https://packages.sury.org/php/ bullseye main > /etc/apt/sources.list.d/php.list'

- name: adding php repository gpg key
  get_url:
    url: https://packages.sury.org/php/apt.gpg
    dest: /etc/apt/trusted.gpg.d/php.gpg

- name: install nextcloud pre requisites
  apt: 
    name:
    - php8.0-fpm
    - php8.0-common
    - php8.0-gd
    - php8.0-pgsql
    - php8.0-curl
    - php8.0-mbstring
    - php8.0-xml
    - php8.0-intl
    - php8.0-zip
    - php8.0-gmp
    - php8.0-redis
    - php8.0-bcmath
    - php8.0-imagick
    state: present
    update_cache: yes

- name: Is already installed ?
  stat:
    path: "/opt/nextcloud/config/config.php"
  register: already_installed

- name: Is already downloaded ?
  stat:
    path: "'/tmp/nextcloud-{{nextcloud.version}}.zip'"
  register: nextcloud_zip

- name: Download nextcloud files
  get_url:
    url: https://download.nextcloud.com/server/releases/nextcloud-{{nextcloud.version}}.zip
    dest: '/tmp/nextcloud-{{nextcloud.version}}.zip'
  when: not nextcloud_zip.stat.exists is defined or not nextcloud_zip.stat.exists

- name: Backup old installation (config), if needed
  copy:
    remote_src: true
    src: '/opt/nextcloud/config/config.php'
    dest: '/opt/config.php'
  ignore_errors: true
  when: already_installed.stat.exists is defined and already_installed.stat.exists

- name: Backup old installation (apps), if needed
  copy:
    remote_src: true
    src: '/opt/nextcloud/apps/{{ item }}'
    dest: '/opt/{{ item }}'
  ignore_errors: true
  loop: "{{ nextcloud.appsToRestore }}"
  when: already_installed.stat.exists is defined and already_installed.stat.exists

- name: Cleanup target folder
  file:
    path: '{{ item }}'
    state: absent
  loop:
  - '/opt/nextcloud-{{nextcloud.version}}'
  - '/opt/nextcloud'

- name: Extract nextcloud files into /opt
  unarchive:
    src: '/tmp/nextcloud-{{nextcloud.version}}.zip'
    dest: /opt
    remote_src: 'yes'
    owner: nobody
    group: nogroup

- name: rename default folder name
  command: 'mv /opt/nextcloud /opt/nextcloud-{{nextcloud.version}}'

- name: link to current version
  file:
    src: /opt/nextcloud-{{ nextcloud.version }}
    dest: /opt/nextcloud
    state: 'link'
    owner: 'nobody'
    group: 'nogroup'

- name: Copy php FPM configuration file
  copy:
    src: www.conf
    dest: /etc/php/8.0/fpm/pool.d/www.conf

- name: create data directory
  file:
    path: /data/nextcloud
    state: directory
    recurse: yes
    owner: 'nobody'
    group: 'nogroup'

- name: Restore old configuration, if needed
  command: mv /opt/config.php /opt/nextcloud/config/config.php
  when: already_installed.stat.exists is defined and already_installed.stat.exists

- name: Restore old apps, if needed
  command: mv /opt/{{ item }} /opt/nextcloud/apps/{{ item }}
  ignore_errors: true
  loop: "{{ nextcloud.appsToRestore }}"
  when: already_installed.stat.exists is defined and already_installed.stat.exists

- name: Create dedicated database
  include_role:
    name : pg_new_fresh_database
  vars:
  - pg_username: '{{ postgresql.nextcloud.username }}'
  - pg_password: '{{ postgresql.nextcloud.password }}'
  - pg_database: '{{ postgresql.nextcloud.database }}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Configure database (config/config.php)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ maintenance:install --database "pgsql" --database-name "{{postgresql.nextcloud.database}}" --database-user "{{postgresql.nextcloud.username}}" --database-pass "{{postgresql.nextcloud.password}}" --admin-user "{{nextcloud.admin.username}}" --admin-pass "{{nextcloud.admin.password}}" --data-dir "/data/nextcloud"'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Force owner of config file
  file:
    path: '/opt/nextcloud/config/config.php'
    owner: 'nobody'
    group: 'nogroup'

- name: Mise Ã  jour de l'environnement occ
  shell: 
    cmd: 'sudo -u nobody php8.0 occ upgrade'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'

- name: Configure database (Missing-indices)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ db:add-missing-indices'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Configure database (Missing-primary keys)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ db:add-missing-primary-keys'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Configure database (Missing-columns)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ db:add-missing-columns'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Configure database (convert-filecache-bigint)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ db:convert-filecache-bigint'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Configure trusted domains (in config/config.php)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ config:system:set trusted_domains 0 --value=nextcloud.meallier.fr'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'

- name: Configure secure url overwrite (in config/config.php)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ config:system:set overwrite.cli.url --value=http://nextcloud.meallier.fr'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: redmine_unsecured

- name: Configure url overwrite (in config/config.php)
  shell: 
    cmd: 'sudo -u nobody php8.0 occ config:system:set overwrite.cli.url --value=https://nextcloud.meallier.fr'
    chdir: '/opt/nextcloud-{{nextcloud.version}}'
  when: not redmine_unsecured

- name: 'Insecure configuration (for Vagrant)'
  include: unsecure.yml
  when: redmine_unsecured
    
- name: 'Secure configuration (for Internet)'
  include: secure.yml
  when: not redmine_unsecured

- name: PHP-FPM service restart
  systemd:
    name: 'php8.0-fpm'
    state: restarted

- name: Copy emptyTrash script
  copy:
    src: nextcloudTrash.sh
    dest: /opt/nextcloudTrash.sh
    mode: 'a+x'

- name: Copy emptyTrash service
  copy:
    src: nextcloudTrash.service
    dest: /etc/systemd/system/nextcloudTrash.service
    owner: root
    group: root
    mode: '0644'

- name: Copy emptyTrash timer
  copy:
    src: nextcloudTrash.timer
    dest: /etc/systemd/system/nextcloudTrash.timer
    owner: root
    group: root
    mode: '0644'

- name: Enabling emptyTrash timer
  systemd:
    name: 'nextcloudTrash.timer'
    enabled: yes

- name: logrotate configuration
  copy:
    src: logrotate
    dest: /etc/logrotate.d/nextcloud

- name: PHP-FPM service restart
  systemd:
    name: 'php8.0-fpm'
    state: restarted