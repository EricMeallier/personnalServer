---
- name: Update DNS
  include_role:
    name : update_infomaniak_dns
  vars:
    targetExtension : '{{etherpad.domain.suffix}}'
    targetIP: '{{ansible_default_ipv4.address}}'
  when: not redmine_unsecured

- name: Is already installed ?
  stat:
    path: "/opt/etherpad-lite/settings.json"
  register: already_installed

- name: Create dedicated database
  include_role:
    name : pg_new_fresh_database
  vars:
    pg_username: '{{ dbschema.etherpad.username }}'
    pg_password: '{{ dbschema.etherpad.password }}'
    pg_database: '{{ dbschema.etherpad.database }}'
  when: not already_installed.stat.exists is defined or not already_installed.stat.exists

- name: Ensure group "etherpad" exists
  group:
    name: etherpad
    state: present

- name: Add the user 'etherpad'
  user:
    name: etherpad
    group: etherpad

- name: Download etherpad files
  get_url:
    url: https://github.com/ether/etherpad-lite/archive/{{ package.version }}.zip
    dest: '/tmp/etherpad-{{ package.version }}.zip'
    timeout: 30

- name: Extract etherpad files into /opt
  unarchive:
    src: '/tmp/etherpad-{{ package.version }}.zip'
    dest: /opt
    remote_src: 'yes'
    owner: etherpad
    group: etherpad

- name: link to current version
  file:
    src: /opt/etherpad-lite-{{ package.version }}
    dest: /opt/etherpad-lite
    state: 'link'
    owner: 'etherpad'
    group: 'etherpad'

- name: Copy database configuration file
  template:
    src: settings.json
    dest: /opt/etherpad-lite/settings.json
    owner: etherpad
    group: etherpad
    mode: '0644'

- name: retrieve dependencies
  shell: 
    cmd: bash /opt/etherpad-lite/bin/installDeps.sh
    chdir: '/opt/etherpad-lite'

- name: Install etherpad service script
  copy:
    src: etherpad.service
    dest: /etc/systemd/system/etherpad.service
    owner: root
    group: root
    mode: '0644'

- name: etherpad service reload/start
  systemd:
    name: 'etherpad'
    daemon_reload: true
    state: restarted
    enabled: true

- name: Is certificate already installed ?
  stat:
    path: "/etc/letsencrypt/live/{{ etherpad.domain.suffix }}.{{ server.domain.sub}}{{server.domain.main }}/fullchain.pem"
  register: cert_already_installed

- name: generate etherpad certificate
  shell: /usr/bin/certbot certonly -d {{ etherpad.domain.suffix }}.{{ server.domain.sub}}{{server.domain.main }} -m {{ server.domain.contact }} --agree-tos --webroot --no-eff-email --webroot-path /opt/nginx/html  --keep-until-expiring --non-interactive
  when: not redmine_unsecured and not cert_already_installed.stat.exists is defined and not cert_already_installed.stat.exists
      
# finish installation with ssl termination
- name: Copy full nginx ssl configuration file
  template:
    src: etherpad.conf
    dest: /opt/nginx/conf/server/etherpad.conf

- name: Nginx service restart with full configuration
  systemd:
    name: 'nginx'
    state: restarted

- name: Cleanup installation
  file:
    path: '/tmp/etherpad-{{ package.version }}.zip'
    state: 'absent'