---

- name: does the postgreql user exists ?
  shell: psql -t -c "SELECT 'found' FROM pg_roles WHERE rolname='{{ pg_username }}'"
  register: userExists
  become_user: 'postgres'

- name: create postgreql user
  shell: psql -c "CREATE ROLE {{ pg_username }} PASSWORD '{{ pg_password }}' NOSUPERUSER NOCREATEDB NOCREATEROLE INHERIT LOGIN"
  become_user: 'postgres'
  when: userExists.stdout.find('found') != 1

- name: does the database exists ?
  shell: psql -t -c "SELECT 'found' FROM pg_database WHERE datname='{{ pg_database }}'"
  register: databaseExists
  become_user: 'postgres'

- name: delete existing database
  shell: psql -c "DROP DATABASE {{ pg_database }}"
  become_user: 'postgres'
  when: databaseExists.stdout.find('found') == 1

- name: create database
  shell: psql -c "CREATE DATABASE {{ pg_database }} OWNER {{ pg_username }}"
  become_user: 'postgres'

- name: Allow of access for user
  lineinfile:
    dest: /etc/postgresql/{{ postgresql.version }}/main/pg_hba.conf
    regexp: "{{ pg_username }}"
    line: "local {{pg_database}} {{ pg_username }} md5"
