---

- name: install redmine pre requisites
  apt: 
    name:
    - curl
    - gnupg2
    - libcurl4-openssl-dev
    - libmagickwand-dev
    - postgresql-client-13
    - postgresql-server-dev-13
    - imagemagick
    state: present

- name: Create dedicated database
  include_role:
    name : pg_new_fresh_database
  vars:
  - pg_username: '{{ postgresql.redmine.username }}'
  - pg_password: '{{ postgresql.redmine.password }}'
  - pg_database: '{{ postgresql.redmine.database }}'

- name: adding gpg key for rvm mpapis
  shell: curl -sSL https://rvm.io/mpapis.asc | gpg --import -
  
- name: adding gpg key for rvm pkuczynski
  shell: curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -
  
- name: check is rvm already installed
  stat:
    path: /usr/local/rvm
  register: rvmExists
  
- name: install rvm
  shell: \curl -sSL https://get.rvm.io | bash -s stable
  when: not rvmExists.stat.isdir is defined or not rvmExists.stat.isdir

- name: Adding user root to rvm users
  user:
    name: 'root'
    group: 'rvm'
    append: yes

- name: install ruby {{ruby.version}}
  shell: /usr/local/rvm/bin/rvm install {{ruby.version}}

- name: use {{ruby.version}} ruby version
  shell: /usr/local/rvm/bin/rvm --default use {{ruby.version}}

- name: install pg client
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; gem install pg -v '1.4.3'

- name: install rmagick
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; gem install rmagick -v '4.2.6'

- name: install passenger
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; gem install passenger -v '6.0.15'

- name: install strscan
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; gem install strscan -v '3.0.4'

- name: check if nginx already exists
  stat: 
    path: /opt/nginx/sbin/nginx
  register: nginx_exists

- name: install nginx with passenger
  shell: passenger-install-nginx-module --auto --auto-download --prefix=/opt/nginx --languages ruby
  environment:
    GEM_PATH: '/usr/local/rvm/gems/ruby-{{ruby.version}}:/usr/local/rvm/gems/ruby-{{ruby.version}}@global'
    GEM_HOME: '/usr/local/rvm/gems/ruby-{{ruby.version}}'
    PATH: '/usr/local/rvm/gems/ruby-{{ruby.version}}/bin:/usr/local/rvm/gems/ruby-{{ruby.version}}@global/bin:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/rvm/bin'
  when: not nginx_exists.stat.exists

- name: Ensure group "redmine" exists
  group:
    name: redmine
    state: present

- name: Add the user 'redmine'
  user:
    name: redmine
    group: redmine

- name: Adding user redmine to rvm users
  user:
    name: 'redmine'
    group: 'rvm'
    append: yes

- name: Download redmine files
  get_url:
    url: https://www.redmine.org/releases/redmine-{{redmine.version}}.tar.gz
    dest: /tmp/redmine-{{redmine.version}}.tar.gz
    checksum: sha256:{{redmine.checksum.sha256}}
    
- name: Extract redmine files into /opt
  unarchive:
    src: /tmp/redmine-{{redmine.version}}.tar.gz
    dest: /opt
    remote_src: 'yes'
    owner: 'root'
    group: 'rvm'

- name: link to current version
  file:
    src: /opt/redmine-{{redmine.version}}
    dest: /opt/redmine
    state: 'link'
    owner: 'root'
    group: 'rvm'

- name: Copy database configuration file
  template:
    src: database.yml
    dest: /opt/redmine/config/database.yml
    owner: 'root'
    group: 'rvm'
    mode: '0644'

- name: retreive dependencies for redmine
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; bundle install --path=.
  args:
    chdir: '/opt/redmine/'
  become_user: redmine

- name: generate redmine token
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; bin/rake generate_secret_token
  args:
    chdir: '/opt/redmine/'
  become_user: redmine

- name: migrate redmine database
  shell: PATH=$PATH:/usr/local/rvm/rubies/ruby-{{ruby.version}}/bin; RAILS_ENV=production bin/rake db:migrate
  args:
    chdir: '/opt/redmine/'
  become_user: redmine

- name: directory for files under /data
  file:
    path: /data/redmine-files
    state: 'directory'
    owner: 'nobody'
    group: 'nogroup'

- name: remove default files directory
  file:
    path: /opt/redmine-{{redmine.version}}/files
    state: 'absent'

- name: link to data directory
  file:
    src: /data/redmine-files
    dest: /opt/redmine-{{redmine.version}}/files
    state: 'link'
    owner: 'nobody'
    group: 'nogroup'
  
- name: permission to tmp directory
  file:
    path: /opt/redmine-{{redmine.version}}/tmp
    state: 'touch'
    mode: '777'

- name: Install nginx service script
  copy:
    src: nginx.service
    dest: /etc/systemd/system/nginx.service
    owner: root
    group: root
    mode: '0644'

- name: Copy minimal nginx configuration file
  template:
    src: minimal.conf
    dest: /opt/nginx/conf/nginx.conf
    owner: 'root'
    group: 'rvm'
    mode: '0644'

- name: Create external configuration for nginx
  file:
    path: /opt/nginx/conf/server
    state: 'directory'
    mode: '0755'
  
- name: Nginx service reload/start
  systemd:
    name: 'nginx'
    daemon_reload: true
    state: started
    enabled: true

- name: 'Insecure configuration (for Vagrant)'
  include: unsecure.yml
  when: redmine_unsecured
    
- name: 'Secure configuration (for Internet)'
  include: secure.yml
  when: not redmine_unsecured

- name: logrotate configuration
  copy:
    src: logrotate
    dest: /etc/logrotate.d/redmine
